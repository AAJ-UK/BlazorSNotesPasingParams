@page "/fetchdata"

@using BlazorApp2.Data
@inject WeatherForecastService ForecastService


<h1>This data has been passed as a Cascading Value from App.razor</h1>
<b>
    This is your IP Address. Note if your running as Local host, it will be something like ::1 -> IP ADDRESS = @DataToPass.StringData
    <br />
    The int part of the data is @DataToPass.IntData
</b

<br /><br /><br /><br /><br />
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    //here is were we collect the cascaded data and map it into our object for use in this child
    [CascadingParameter]
    private DataToPassCascaded? DataToPass { get; set; }

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
